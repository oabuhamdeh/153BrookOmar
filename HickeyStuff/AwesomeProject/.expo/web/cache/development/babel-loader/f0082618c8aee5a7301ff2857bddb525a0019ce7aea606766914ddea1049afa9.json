{"ast":null,"code":"import * as React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport WeekSchedule from \"./WeekSchedule\";\nimport DaySchedule from \"./DaySchedule\";\nimport About from \"./About\";\nimport Testing from \"./Testing\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nvar HomeScreen = function HomeScreen(_ref) {\n  var navigation = _ref.navigation;\n  return _jsxs(View, {\n    style: {\n      flexDirection: 'column',\n      justifyContent: 'space-evenly',\n      alignItems: 'center',\n      flex: 1 / 3\n    },\n    children: [_jsx(Button, {\n      title: \"Alarms\",\n      onPress: function onPress() {\n        return navigation.navigate('DaySchedule');\n      }\n    }), _jsx(Button, {\n      title: \"View week schedule\",\n      onPress: function onPress() {\n        return navigation.navigate('WeekSchedule');\n      }\n    }), _jsx(Button, {\n      title: \"About\",\n      onPress: function onPress() {\n        return navigation.navigate('About');\n      }\n    }), _jsx(Button, {\n      title: \"Test - Don't click me!\",\n      onPress: function onPress() {\n        return navigation.navigate('Testing');\n      }\n    })]\n  });\n};\nvar ProfileScreen = function ProfileScreen(_ref2) {\n  var navigation = _ref2.navigation,\n    route = _ref2.route;\n  return _jsxs(Text, {\n    children: [\"This is \", route.params.name, \"'s profile\"]\n  });\n};\nvar MyStack = function MyStack() {\n  return _jsx(NavigationContainer, {\n    children: _jsxs(Stack.Navigator, {\n      children: [_jsx(Stack.Screen, {\n        name: \"Home\",\n        component: HomeScreen,\n        options: {\n          title: 'Welcome'\n        }\n      }), _jsx(Stack.Screen, {\n        name: \"DaySchedule\",\n        component: DaySchedule\n      }), _jsx(Stack.Screen, {\n        name: \"WeekSchedule\",\n        component: WeekSchedule\n      }), _jsx(Stack.Screen, {\n        name: \"About\",\n        component: About\n      }), _jsx(Stack.Screen, {\n        name: \"Testing\",\n        component: Testing\n      })]\n    })\n  });\n};\nexport default MyStack;","map":{"version":3,"names":["React","Button","Text","View","NavigationContainer","createNativeStackNavigator","WeekSchedule","DaySchedule","About","Testing","jsx","_jsx","jsxs","_jsxs","Stack","HomeScreen","_ref","navigation","style","flexDirection","justifyContent","alignItems","flex","children","title","onPress","navigate","ProfileScreen","_ref2","route","params","name","MyStack","Navigator","Screen","component","options"],"sources":["C:/Users/User/Desktop/Dyroth/School/Senior year/Mobile/153BrookOmar/HickeyStuff/AwesomeProject/components/StackDemo.js"],"sourcesContent":["import * as React from 'react';\r\nimport {Button,Text,View} from 'react-native';\r\nimport {NavigationContainer} from '@react-navigation/native';\r\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\r\nimport WeekSchedule from './WeekSchedule';\r\nimport DaySchedule from './DaySchedule';\r\nimport About from \"./About\";\r\nimport Testing from \"./Testing\";\r\n\r\nconst Stack = createNativeStackNavigator();\r\n\r\nconst HomeScreen = ({navigation}) => {\r\n    return (\r\n     <View style={{ flexDirection:'column', justifyContent:'space-evenly', alignItems: 'center', flex: 1/3}}>\r\n            <Button\r\n                title=\"Alarms\" // add new alarm (in alarms page)\r\n                onPress={() =>\r\n                navigation.navigate('DaySchedule')\r\n                }\r\n            />\r\n            <Button\r\n                title=\"View week schedule\"\r\n                onPress={() =>\r\n                navigation.navigate('WeekSchedule') \r\n                }\r\n            />\r\n            <Button\r\n                title= \"About\"\r\n                onPress = {()=>\r\n                navigation.navigate('About')\r\n                }\r\n            />\r\n            <Button\r\n                title= \"Test - Don't click me!\"\r\n                onPress = {()=>\r\n                navigation.navigate('Testing')\r\n                }\r\n            />\r\n      </View>\r\n    );\r\n  };\r\n\r\n  const ProfileScreen = ({navigation, route}) => {\r\n    return <Text>This is {route.params.name}'s profile</Text>;\r\n  };\r\n\r\nconst MyStack = () => {\r\n  return (\r\n    <NavigationContainer>\r\n      <Stack.Navigator>\r\n        <Stack.Screen name=\"Home\" component={HomeScreen}\r\n          options={{title: 'Welcome'}}\r\n        />\r\n        <Stack.Screen name=\"DaySchedule\" component={DaySchedule} />\r\n        <Stack.Screen name=\"WeekSchedule\" component={WeekSchedule} />\r\n        <Stack.Screen name=\"About\" component ={About} />\r\n        <Stack.Screen name=\"Testing\" component ={Testing} />\r\n      </Stack.Navigator>\r\n    </NavigationContainer>\r\n  );\r\n};\r\n\r\nexport default MyStack;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}