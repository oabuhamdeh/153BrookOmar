{"ast":null,"code":"import React from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport DigitView from \"./DigitView\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar getWeek = function getWeek() {\n  for (var i = 0; i < 7; i++) {\n    _jsx(View, {\n      style: styles.daysOfWeek,\n      children: _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: i\n      })\n    });\n  }\n};\nvar getMonth = function getMonth() {\n  for (var i = 0; i < 5; i++) {\n    getWeek();\n  }\n};\nvar App = function App() {\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      style: styles.monthName,\n      children: \"June\"\n    }), _jsxs(View, {\n      style: styles.daysOfWeek,\n      children: [_jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Sunday\"\n      }), _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Monday\"\n      }), _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Tuesday\"\n      }), _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Wednesday\"\n      }), _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Thursday\"\n      }), _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Friday\"\n      }), _jsx(Text, {\n        style: styles.daysOfWeek,\n        children: \"Saturday\"\n      })]\n    }), \"getMonth();\"]\n  });\n};\nvar styles = StyleSheet.create({\n  monthName: {\n    flex: 1,\n    padding: 40,\n    margin: 20,\n    borderWidth: 2,\n    borderColor: \"#fff\",\n    backgroundColor: \"#F2FADA\",\n    fontWeight: 'bold',\n    justifyContent: 'center',\n    textAlign: 'center',\n    fontSize: 40\n  },\n  daysOfWeek: {\n    flex: 5,\n    borderWidth: 1,\n    borderColor: \"black\",\n    fontSize: 30,\n    justifyContent: 'center',\n    textAlign: \"center\",\n    flexDirection: 'row'\n  }\n});\nexport default App;","map":{"version":3,"names":["React","StyleSheet","View","Text","DigitView","jsx","_jsx","jsxs","_jsxs","getWeek","i","style","styles","daysOfWeek","children","getMonth","App","monthName","create","flex","padding","margin","borderWidth","borderColor","backgroundColor","fontWeight","justifyContent","textAlign","fontSize","flexDirection"],"sources":["/Users/brookeschwartz/Documents/GitHub/153BrookOmar/HickeyStuff/AwesomeProject/components/WeekSchedule.js"],"sourcesContent":["import React from 'react';\nimport {StyleSheet, View, Text} from 'react-native';\n\nimport DigitView from './DigitView';\n\nconst getWeek = () => {\n  for(let i = 0; i < 7; i++){\n      <View style={styles.daysOfWeek}>\n        <Text style={styles.daysOfWeek}>{i}</Text>\n      </View>\n  }\n}\n\nconst getMonth = () => {\n  for(let i = 0; i < 5; i++){\n    getWeek();\n}\n}\n\nconst App = () => {\n  return (\n    <View>\n      <View style={styles.monthName}>\n        June\n      </View>\n      <View style={styles.daysOfWeek}>\n        <Text style={styles.daysOfWeek}>Sunday</Text>\n        <Text style={styles.daysOfWeek}>Monday</Text>\n        <Text style={styles.daysOfWeek}>Tuesday</Text>\n        <Text style={styles.daysOfWeek}>Wednesday</Text>\n        <Text style={styles.daysOfWeek}>Thursday</Text>\n        <Text style={styles.daysOfWeek}>Friday</Text>\n        <Text style={styles.daysOfWeek}>Saturday</Text>\n      </View>\n      getMonth();\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  monthName: {\n    flex: 1,\n    padding: 40,\n    margin:20,\n    borderWidth:2,\n    borderColor:\"#fff\",\n    backgroundColor:\"#F2FADA\",\n    fontWeight:'bold',\n    justifyContent:'center',\n    textAlign:'center',\n    fontSize:40,\n  },\n  daysOfWeek: {\n    flex: 5,\n    borderWidth:1,\n    borderColor:\"black\",\n    fontSize:30,\n    justifyContent:'center',\n    textAlign:\"center\",\n    flexDirection:'row',\n  }\n});\n\nexport default App;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAG1B,OAAOC,SAAS;AAAoB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAEpC,IAAMC,OAAO,GAAG,SAAVA,OAAOA,CAAA,EAAS;EACpB,KAAI,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;IACtBJ,IAAA,CAACJ,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAAC,QAAA,EAC7BR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAEJ;MAAC,CAAO;IAAC,CACtC,CAAC;EACX;AACF,CAAC;AAED,IAAMK,QAAQ,GAAG,SAAXA,QAAQA,CAAA,EAAS;EACrB,KAAI,IAAIL,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAG,CAAC,EAAEA,CAAC,EAAE,EAAC;IACxBD,OAAO,CAAC,CAAC;EACb;AACA,CAAC;AAED,IAAMO,GAAG,GAAG,SAANA,GAAGA,CAAA,EAAS;EAChB,OACER,KAAA,CAACN,IAAI;IAAAY,QAAA,GACHR,IAAA,CAACJ,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACK,SAAU;MAAAH,QAAA,EAAC;IAE/B,CAAM,CAAC,EACPN,KAAA,CAACN,IAAI;MAACS,KAAK,EAAEC,MAAM,CAACC,UAAW;MAAAC,QAAA,GAC7BR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAM,CAAM,CAAC,EAC7CR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAM,CAAM,CAAC,EAC7CR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAO,CAAM,CAAC,EAC9CR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAS,CAAM,CAAC,EAChDR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAQ,CAAM,CAAC,EAC/CR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAM,CAAM,CAAC,EAC7CR,IAAA,CAACH,IAAI;QAACQ,KAAK,EAAEC,MAAM,CAACC,UAAW;QAAAC,QAAA,EAAC;MAAQ,CAAM,CAAC;IAAA,CAC3C,CAAC,eAET;EAAA,CAAM,CAAC;AAEX,CAAC;AAED,IAAMF,MAAM,GAAGX,UAAU,CAACiB,MAAM,CAAC;EAC/BD,SAAS,EAAE;IACTE,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,MAAM,EAAC,EAAE;IACTC,WAAW,EAAC,CAAC;IACbC,WAAW,EAAC,MAAM;IAClBC,eAAe,EAAC,SAAS;IACzBC,UAAU,EAAC,MAAM;IACjBC,cAAc,EAAC,QAAQ;IACvBC,SAAS,EAAC,QAAQ;IAClBC,QAAQ,EAAC;EACX,CAAC;EACDf,UAAU,EAAE;IACVM,IAAI,EAAE,CAAC;IACPG,WAAW,EAAC,CAAC;IACbC,WAAW,EAAC,OAAO;IACnBK,QAAQ,EAAC,EAAE;IACXF,cAAc,EAAC,QAAQ;IACvBC,SAAS,EAAC,QAAQ;IAClBE,aAAa,EAAC;EAChB;AACF,CAAC,CAAC;AAEF,eAAeb,GAAG"},"metadata":{},"sourceType":"module","externalDependencies":[]}